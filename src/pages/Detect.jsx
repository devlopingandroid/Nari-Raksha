import React, { useState, useRef } from 'react';
import { Upload, FileVideo, FileImage, AlertCircle, CheckCircle, Eye, Zap, Shield, Download } from 'lucide-react';

function Detect() {
  const [file, setFile] = useState(null);
  const [isAnalyzing, setIsAnalyzing] = useState(false);
  const [analysisComplete, setAnalysisComplete] = useState(false);
  const [results, setResults] = useState(null);
  const fileInputRef = useRef(null);

  const handleFileUpload = (event) => {
    const uploadedFile = event.target.files[0];
    if (uploadedFile) {
      setFile(uploadedFile);
      setAnalysisComplete(false);
      setResults(null);
    }
  };

  const handleDragOver = (event) => {
    event.preventDefault();
  };

  const handleDrop = (event) => {
    event.preventDefault();
    const droppedFile = event.dataTransfer.files[0];
    if (droppedFile) {
      setFile(droppedFile);
      setAnalysisComplete(false);
      setResults(null);
    }
  };

  const analyzeFile = async () => {
    if (!file) return;
    
    setIsAnalyzing(true);
    
    // Simulate AI analysis process
    const steps = [
      "Extracting frames and metadata...",
      "Analyzing facial landmarks...", 
      "Detecting lighting inconsistencies...",
      "Checking for GAN artifacts...",
      "Cross-referencing with database...",
      "Generating final report..."
    ];

    for (let i = 0; i < steps.length; i++) {
      await new Promise(resolve => setTimeout(resolve, 1200));
    }

    // Simulate analysis results
    const fakeScore = Math.random() * 100;
    const isFake = fakeScore > 70;
    
    setResults({
      score: Math.round(fakeScore),
      isFake,
      confidence: isFake ? 'High' : 'Medium',
      issues: isFake ? [
        'Inconsistent eye blink patterns detected',
        'Lighting inconsistencies around facial edges', 
        'Temporal artifacts in frame transitions',
        'Unusual pixel noise in facial region'
      ] : [
        'Natural eye movement patterns',
        'Consistent lighting throughout',
        'No temporal anomalies detected'
      ],
      recommendation: isFake ? 
        'This content appears to be digitally manipulated. We recommend reporting this content and seeking support if you are the victim.' :
        'This content appears authentic based on our analysis. No signs of deepfake manipulation detected.'
    });
    
    setIsAnalyzing(false);
    setAnalysisComplete(true);
  };

  const downloadReport = () => {
    const reportData = {
      filename: file?.name,
      analysisDate: new Date().toISOString(),
      results: results,
      disclaimer: 'This report is generated by DeepShield AI analysis and should be used as supporting evidence.'
    };
    
    const blob = new Blob([JSON.stringify(reportData, null, 2)], { type: 'application/json' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `deepshield-report-${Date.now()}.json`;
    a.click();
  };

  return (
    <div className="min-h-screen bg-gray-50 py-12">
      <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* Header */}
        <div className="text-center mb-12">
          <h1 className="text-4xl font-heading font-bold text-gray-900 mb-6">
            Deepfake <span className="text-primary-600">Detection</span> Tool
          </h1>
          <p className="text-xl text-gray-600 max-w-2xl mx-auto">
            Upload an image or video to analyze for deepfake manipulation. Our AI scans for digital artifacts, 
            lighting inconsistencies, and facial anomalies.
          </p>
        </div>

        {/* Privacy Notice */}
        <div className="bg-primary-50 border border-primary-200 rounded-lg p-4 mb-8">
          <div className="flex items-start space-x-3">
            <Shield className="w-5 h-5 text-primary-600 mt-0.5" />
            <div>
              <h3 className="font-semibold text-primary-800 mb-1">Privacy Guarantee</h3>
              <p className="text-sm text-primary-700">
                Your files are analyzed locally and automatically deleted after analysis. We never store or share your content.
                <a href="/privacy" className="underline ml-1 hover:text-primary-800">Learn more</a>
              </p>
            </div>
          </div>
        </div>

        {/* Upload Section */}
        <div className="bg-white rounded-2xl shadow-lg p-8 mb-8">
          <div
            className={`border-2 border-dashed rounded-xl p-12 text-center transition-all ${
              file ? 'border-primary-300 bg-primary-50' : 'border-gray-300 hover:border-primary-400 hover:bg-primary-25'
            }`}
            onDragOver={handleDragOver}
            onDrop={handleDrop}
          >
            {!file ? (
              <div className="space-y-4">
                <div className="flex justify-center">
                  <Upload className="w-16 h-16 text-gray-400" />
                </div>
                <div>
                  <h3 className="text-xl font-semibold text-gray-900 mb-2">Upload File for Analysis</h3>
                  <p className="text-gray-600 mb-4">
                    Drag and drop your image or video file here, or click to browse
                  </p>
                  <button
                    onClick={() => fileInputRef.current?.click()}
                    className="inline-flex items-center px-6 py-3 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors"
                  >
                    <Upload className="w-4 h-4 mr-2" />
                    Choose File
                  </button>
                </div>
                <div className="text-sm text-gray-500">
                  Supports: JPG, PNG, MP4, MOV (max 50MB)
                </div>
              </div>
            ) : (
              <div className="space-y-4">
                <div className="flex justify-center">
                  {file.type.startsWith('image/') ? (
                    <FileImage className="w-16 h-16 text-primary-600" />
                  ) : (
                    <FileVideo className="w-16 h-16 text-primary-600" />
                  )}
                </div>
                <div>
                  <h3 className="text-xl font-semibold text-gray-900 mb-2">{file.name}</h3>
                  <p className="text-gray-600 mb-4">
                    File size: {(file.size / 1024 / 1024).toFixed(2)} MB
                  </p>
                  <div className="flex gap-3 justify-center">
                    <button
                      onClick={analyzeFile}
                      disabled={isAnalyzing}
                      className="inline-flex items-center px-6 py-3 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
                    >
                      {isAnalyzing ? (
                        <>
                          <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></div>
                          Analyzing...
                        </>
                      ) : (
                        <>
                          <Eye className="w-4 h-4 mr-2" />
                          Start Analysis
                        </>
                      )}
                    </button>
                    <button
                      onClick={() => {
                        setFile(null);
                        setAnalysisComplete(false);
                        setResults(null);
                      }}
                      className="px-6 py-3 text-gray-600 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors"
                    >
                      Remove
                    </button>
                  </div>
                </div>
              </div>
            )}
          </div>
          
          <input
            ref={fileInputRef}
            type="file"
            accept="image/*,video/*"
            onChange={handleFileUpload}
            className="hidden"
          />
        </div>

        {/* Analysis Progress */}
        {isAnalyzing && (
          <div className="bg-white rounded-2xl shadow-lg p-8 mb-8">
            <div className="text-center">
              <div className="inline-flex items-center justify-center w-16 h-16 bg-primary-100 rounded-full mb-4">
                <Zap className="w-8 h-8 text-primary-600 animate-pulse" />
              </div>
              <h3 className="text-xl font-semibold text-gray-900 mb-2">AI Analysis in Progress</h3>
              <p className="text-gray-600 mb-6">Our advanced algorithms are examining your file for deepfake indicators...</p>
              
              <div className="max-w-md mx-auto">
                <div className="bg-gray-200 rounded-full h-2 mb-4">
                  <div className="bg-primary-600 h-2 rounded-full transition-all duration-300" style={{width: '85%'}}></div>
                </div>
                <p className="text-sm text-gray-500">Analyzing facial landmarks and temporal consistency...</p>
              </div>
            </div>
          </div>
        )}

        {/* Results */}
        {analysisComplete && results && (
          <div className="bg-white rounded-2xl shadow-lg p-8">
            <div className="text-center mb-8">
              <div className={`inline-flex items-center justify-center w-16 h-16 rounded-full mb-4 ${
                results.isFake ? 'bg-red-100' : 'bg-green-100'
              }`}>
                {results.isFake ? (
                  <AlertCircle className="w-8 h-8 text-red-600" />
                ) : (
                  <CheckCircle className="w-8 h-8 text-green-600" />
                )}
              </div>
              <h3 className="text-2xl font-semibold text-gray-900 mb-2">Analysis Complete</h3>
              <div className={`text-4xl font-bold mb-2 ${
                results.isFake ? 'text-red-600' : 'text-green-600'
              }`}>
                {results.score}% {results.isFake ? 'Likely Fake' : 'Likely Authentic'}
              </div>
              <p className={`text-lg ${
                results.isFake ? 'text-red-700' : 'text-green-700'
              }`}>
                Confidence: {results.confidence}
              </p>
            </div>

            {/* Detection Details */}
            <div className="grid md:grid-cols-2 gap-8 mb-8">
              <div>
                <h4 className="text-lg font-semibold text-gray-900 mb-4">
                  {results.isFake ? 'Issues Detected' : 'Authentic Indicators'}
                </h4>
                <ul className="space-y-2">
                  {results.issues.map((issue, index) => (
                    <li key={index} className="flex items-start space-x-2">
                      <div className={`w-2 h-2 rounded-full mt-2 ${
                        results.isFake ? 'bg-red-500' : 'bg-green-500'
                      }`}></div>
                      <span className="text-gray-700">{issue}</span>
                    </li>
                  ))}
                </ul>
              </div>
              
              <div>
                <h4 className="text-lg font-semibold text-gray-900 mb-4">Recommendation</h4>
                <p className="text-gray-700 leading-relaxed mb-4">{results.recommendation}</p>
                
                {results.isFake && (
                  <div className="bg-red-50 border border-red-200 rounded-lg p-4">
                    <h5 className="font-semibold text-red-800 mb-2">Next Steps:</h5>
                    <ul className="text-sm text-red-700 space-y-1">
                      <li>• Report this content to the platform</li>
                      <li>• Contact our support team for assistance</li>
                      <li>• Save this analysis report as evidence</li>
                      <li>• Consider legal action if you are the victim</li>
                    </ul>
                  </div>
                )}
              </div>
            </div>

            {/* Action Buttons */}
            <div className="flex flex-col sm:flex-row gap-4 justify-center border-t border-gray-200 pt-8">
              <button
                onClick={downloadReport}
                className="inline-flex items-center justify-center px-6 py-3 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors"
              >
                <Download className="w-4 h-4 mr-2" />
                Download Report
              </button>
              
              {results.isFake && (
                <button
                  onClick={() => window.location.href = '/report'}
                  className="inline-flex items-center justify-center px-6 py-3 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors"
                >
                  <AlertCircle className="w-4 h-4 mr-2" />
                  Report Content
                </button>
              )}
              
              <button
                onClick={() => {
                  setFile(null);
                  setAnalysisComplete(false);
                  setResults(null);
                }}
                className="px-6 py-3 text-gray-600 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors"
              >
                Analyze Another File
              </button>
            </div>
          </div>
        )}
      </div>
    </div>
  );
}

export default Detect;
